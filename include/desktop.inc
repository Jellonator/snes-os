; Full bounds of desktop in tiles (including taskbar)
.DEFINE DESKTOP_FULL_WIDTH_TILES 26
.DEFINE DESKTOP_FULL_HEIGHT_TILES 22
.DEFINE DESKTOP_TILE_MIN_X (32 - DESKTOP_FULL_WIDTH_TILES)/2
.DEFINE DESKTOP_TILE_MAX_X (DESKTOP_TILE_MIN_X + DESKTOP_FULL_WIDTH_TILES - 1)
.DEFINE DESKTOP_TILE_MIN_Y 4
.DEFINE DESKTOP_TILE_MAX_Y (DESKTOP_TILE_MIN_Y + DESKTOP_FULL_HEIGHT_TILES - 1)

.DEFINE DESKTOP_TASKBAR_HEIGHT_TILES 2

; Usable size and bounds of desktop by (outer border of) windows
.DEFINE WINDOW_BORDER_WIDTH_TILES DESKTOP_FULL_WIDTH_TILES
.DEFINE WINDOW_BORDER_HEIGHT_TILES (DESKTOP_FULL_WIDTH_TILES-DESKTOP_TASKBAR_HEIGHT_TILES)
.DEFINE WINDOW_BORDER_MINIMUM_X DESKTOP_TILE_MIN_X
.DEFINE WINDOW_BORDER_MINIMUM_Y DESKTOP_TILE_MIN_Y
.DEFINE WINDOW_BORDER_MAXIMUM_X DESKTOP_TILE_MAX_X
.DEFINE WINDOW_BORDER_MAXIMUM_Y (DESKTOP_TILE_MAX_Y-DESKTOP_TASKBAR_HEIGHT_TILES)

; True content area of desktop
.DEFINE WINDOW_CONTENT_WIDTH_TILES (WINDOW_BORDER_WIDTH_TILES-2)
.DEFINE WINDOW_CONTENT_HEIGHT_TILES (WINDOW_BORDER_HEIGHT_TILES-2)
.DEFINE WINDOW_CONTENT_MINIMUM_X (WINDOW_BORDER_MINIMUM_X+1)
.DEFINE WINDOW_CONTENT_MINIMUM_Y (WINDOW_BORDER_MINIMUM_Y+1)
.DEFINE WINDOW_CONTENT_MAXIMUM_X (WINDOW_BORDER_MAXIMUM_X-1)
.DEFINE WINDOW_CONTENT_MAXIMUM_Y (WINDOW_BORDER_MAXIMUM_Y-1)

; minimum outer size (in tiles) of a window
.DEFINE WINDOW_BORDER_MINIMUM_WIDTH 6
.DEFINE WINDOW_BORDER_MINIMUM_HEIGHT 6

; Maximum number of windows
.DEFINE MAX_WINDOW_COUNT 12

; Size of a single tile in the desktop
.DEFINE DESKTOP_TILE_WIDTH_PX 16
.DEFINE DESKTOP_TILE_HEIGHT_PX 16

; Draw buffer size
.DEFINE WINDOW_DRAW_BUFFER_ELEMENTS 64
.DEFINE WINDOW_DRAW_BUFFER_ELEMENTS_LIMIT 48
.DEFINE WINDOW_DRAW_BUFFER_ELEMENT_SIZE 128
.DEFINE WINDOW_DRAW_BUFFER_TOTAL_SIZE (WINDOW_DRAW_BUFFER_ELEMENT_SIZE * WINDOW_DRAW_BUFFER_ELEMENTS)

; Parameters for creating a window
.STRUCT desktop_window_create_params_t
    width db
    height db
    pos_x db
    pos_y db
    ; Function that is called when rendering a single tile
    ; renderTile([x16]WID window, [By16]void* buffer, [s8]int x, [s8] int y)
    renderTile dl
    ; Function that is called when window receives a signal
    ; signal([x8]WID window, [a8]int signal)
    signal dl
.ENDST

.STRUCT window_tile_buffer_t SIZE 4
    vramAddr dw
    data dw
.ENDST

.DEFINE DESKTOP_BG1_CHAR_BASE_ADDR $1000
.DEFINE DESKTOP_BG2_CHAR_BASE_ADDR $0000
.DEFINE DESKTOP_OBJ1_CHAR_BASE_ADDR $0000
.DEFINE DESKTOP_OBJ2_CHAR_BASE_ADDR $1000
.DEFINE DESKTOP_BG1_TILE_BASE_ADDR $0800
.DEFINE DESKTOP_BG2_TILE_BASE_ADDR $0C00

.DEFINE MIN_MOUSE_COORD_X (DESKTOP_TILE_MIN_X*8)
.DEFINE MIN_MOUSE_COORD_Y (DESKTOP_TILE_MIN_Y*8)
.DEFINE MAX_MOUSE_COORD_X (DESKTOP_TILE_MAX_X*8-1)
.DEFINE MAX_MOUSE_COORD_Y (DESKTOP_TILE_MAX_Y*8-1)

.DEFINE WINDOW_SIGNAL_KILL 1
